--This analysis utilized the following dataset: 

CREATE TABLE bank_products (
    product_id INTEGER PRIMARY KEY,
    product_name TEXT,
    product_type TEXT,
    interest_rate DECIMAL(5, 2),
    monthly_fee DECIMAL(6, 2),
    minimum_balance DECIMAL(10, 2)
);

INSERT INTO bank_products (product_id, product_name, product_type, interest_rate, monthly_fee, minimum_balance)
VALUES
    (1, 'Savings Account', 'Savings', 0.75, 0.00, 100.00),
    (2, 'Checking Account', 'Checking', 0.25, 5.00, 50.00),
    (3, 'Business Account', 'Business', 1.50, 10.00, 500.00),
    (4, 'Credit Card', 'Credit Card', 18.99, 0.00, 0.00),
    (5, 'Mortgage Loan', 'Loan', 3.25, 0.00, 100000.00),
    (6, 'Certificate of Deposit', 'Savings', 1.50, 0.00, 1000.00),
    (7, 'Student Checking Account', 'Checking', 0.10, 0.00, 10.00),
    (8, 'Business Credit Card', 'Credit Card', 16.99, 0.00, 0.00),
    (9, 'Home Equity Loan', 'Loan', 4.50, 0.00, 50000.00),
    (10, 'IRA Account', 'Savings', 1.25, 0.00, 500.00),
    (11, 'Personal Loan', 'Loan', 8.75, 0.00, 5000.00),
    (12, 'Money Market Account', 'Savings', 1.00, 0.00, 500.00),
    (13, 'Youth Savings Account', 'Savings', 0.50, 0.00, 10.00),
    (14, 'Rewards Credit Card', 'Credit Card', 21.99, 0.00, 0.00),
    (15, 'Auto Loan', 'Loan', 4.25, 0.00, 20000.00);

--Analysis:

--Write a query to show the product names that have a Checking OR Savings product type.
SELECT product_name
FROM bank_products
WHERE product_type = "Checking"
OR product_type = "Savings";

--Write a query to show the product names that have a "Savings" product type AND have an interest_rate of at least 0.75, AND have no monthly fee.
SELECT product_name, interest_rate
FROM bank_products
WHERE product_type="Savings"
AND interest_rate >=0.75
AND monthly_fee=0;

--Categorize bank products based on their monthly fees using a CASE statement.
SELECT product_name,
CASE WHEN monthly_fee = 0 THEN 'No Fee'
WHEN monthly_fee <= 5 THEN 'Low Fee'
ELSE 'High Fee'
END AS fee_category
FROM bank_products;

--Count the number of products within each product type category.
SELECT product_type, COUNT(product_id) AS product_count
FROM bank_products
GROUP BY product_type;

--Calculate the average minimum balance required for each product type.
SELECT product_type, AVG(minimum_balance) AS avg_minimum_balance
FROM bank_products
GROUP BY product_type;

--Select products that have a monthly fee below the average across all products.
SELECT product_name, monthly_fee
FROM bank_products
WHERE monthly_fee < (SELECT AVG(monthly_fee) FROM bank_products);

--Count the number of savings products that require a minimum balance greater than $500.
SELECT COUNT(product_id) AS savings_products_over_500
FROM bank_products
WHERE product_type = 'Savings'
AND minimum_balance > 500;
